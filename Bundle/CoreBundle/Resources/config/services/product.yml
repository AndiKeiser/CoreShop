services:
  coreshop.product_price_rule.condition.quantity:
    class: CoreShop\Bundle\CoreBundle\Product\ProductPriceRule\Condition\QuantityConditionChecker
    arguments:
      - '@coreshop.cart.manager'
    tags:
      - { name: coreshop.product_price_rule.condition, type: quantity, form-type: CoreShop\Bundle\CoreBundle\Form\Type\ProductPriceRule\Condition\QuantityConfigurationType }

  coreshop.product_price_rule.condition.customers:
    class: CoreShop\Bundle\CoreBundle\Product\ProductPriceRule\Condition\CustomersConditionChecker
    arguments:
      ['@security.token_storage']
    tags:
      - { name: coreshop.product_price_rule.condition, type: customers, form-type: CoreShop\Bundle\CoreBundle\Form\Type\ProductPriceRule\Condition\CustomersConfigurationType }

  coreshop.product_price_rule.condition.countries:
    class: CoreShop\Bundle\CoreBundle\Product\ProductPriceRule\Condition\CountriesConditionChecker
    arguments:
      ['@coreshop.context.country']
    tags:
      - { name: coreshop.product_price_rule.condition, type: countries, form-type: CoreShop\Bundle\CoreBundle\Form\Type\ProductPriceRule\Condition\CountriesConfigurationType }

  coreshop.product_price_rule.condition.zones:
    class: CoreShop\Bundle\CoreBundle\Product\ProductPriceRule\Condition\ZonesConditionChecker
    arguments:
      ['@coreshop.context.country']
    tags:
      - { name: coreshop.product_price_rule.condition, type: zones, form-type: CoreShop\Bundle\CoreBundle\Form\Type\ProductPriceRule\Condition\ZonesConfigurationType }

  coreshop.product_price_rule.condition.stores:
    class: CoreShop\Bundle\CoreBundle\Product\ProductPriceRule\Condition\StoresConditionChecker
    arguments:
      ['@coreshop.context.store']
    tags:
      - { name: coreshop.product_price_rule.condition, type: stores, form-type: CoreShop\Bundle\CoreBundle\Form\Type\ProductPriceRule\Condition\StoresConfigurationType }

  coreshop.product_price_rule.condition.currencies:
    class: CoreShop\Bundle\CoreBundle\Product\ProductPriceRule\Condition\CurrenciesConditionChecker
    arguments:
      ['@coreshop.context.currency']
    tags:
      - { name: coreshop.product_price_rule.condition, type: currencies, form-type: CoreShop\Bundle\CoreBundle\Form\Type\ProductPriceRule\Condition\CurrenciesConfigurationType }