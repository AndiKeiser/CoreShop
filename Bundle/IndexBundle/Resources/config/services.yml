imports:
  - { resource: "services/form.yml" }
  - { resource: "services/listeners.yml" }

services:

  coreshop.factory.index.list:
    class: CoreShop\Bundle\IndexBundle\Factory\ListingFactory
    arguments:
      - '@coreshop.registry.index.worker'

  coreshop.filter.processor:
    class: CoreShop\Bundle\IndexBundle\Filter\FilterProcessor
    arguments:
      - '@coreshop.registry.filter.condition_types'

  coreshop.factory.filter.list:
    class: CoreShop\Bundle\IndexBundle\Factory\FilteredListingFactory
    arguments:
      - '@coreshop.factory.index.list'
      - '@coreshop.filter.processor'

  # Index Column Registry
  coreshop.registry.index.column_types:
    class: CoreShop\Component\Registry\ServiceRegistry
    arguments:
      - Symfony\Component\Form\FormTypeInterface
      - index-column-types

  coreshop.form_registry.index_column_types:
    class: CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry

  # Index Worker Registry
  coreshop.registry.index.worker:
    class: CoreShop\Component\Registry\ServiceRegistry
    arguments:
      - CoreShop\Component\Index\Worker\WorkerInterface
      - index-workers

  coreshop.form_registry.index.worker:
    class: CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry

  # Filter Registry
  coreshop.registry.filter.condition_types:
    class: CoreShop\Component\Registry\ServiceRegistry
    arguments:
      - CoreShop\Component\Index\Filter\FilterConditionProcessorInterface
      - filter-processor

  coreshop.form_registry.filter.condition_types:
    class: CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry

  # Index Getter Registry
  coreshop.registry.index.getter:
    class: CoreShop\Component\Registry\ServiceRegistry
    arguments:
      - CoreShop\Component\Index\Getter\GetterInterface
      - index-getters

  coreshop.form_registry.index.getter:
    class: CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry

  # Interpreter Registry
  coreshop.registry.index.interpreter:
    class: CoreShop\Component\Registry\ServiceRegistry
    arguments:
      - CoreShop\Component\Index\Interpreter\InterpreterInterface
      - index-interpreters

  coreshop.form_registry.index.interpreter:
    class: CoreShop\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry

  # Index Workers
  coreshop.index.worker.mysql:
    class: CoreShop\Bundle\IndexBundle\Worker\MysqlWorker
    arguments:
      - '@coreshop.registry.index.getter'
      - '@coreshop.registry.index.interpreter'
    shared: false
    tags:
      - { name: coreshop.index.worker, type: mysql, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Worker\MysqlWorkerType}

  # Index Getter
  coreshop.index.getter.brickfield:
    class: CoreShop\Bundle\IndexBundle\Getter\BrickGetter
    tags:
     - { name: coreshop.index.getter, type: brick, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Getter\BrickGetterFormType}

  # Index Interpreter
  coreshop.index.interpreter.soundex:
    class: CoreShop\Bundle\IndexBundle\Interpreter\Soundex
    tags:
     - { name: coreshop.index.interpreter, type: soundex, form-type: CoreShop\Bundle\IndexBundle\Form\Type\EmptyConfigurationFormType}


  # Index Column Types
  coreshop.index.column_type.classification_store:
    class: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeClassificationStoreType
    tags:
      - { name: coreshop.index.column_type, type: classificationstore, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeClassificationStoreType}

  coreshop.index.column_type.field_collection:
    class: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeFieldCollectionType
    tags:
      - { name: coreshop.index.column_type, type: fieldcollection, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeFieldCollectionType }

  coreshop.index.column_type.localized_fields:
    class: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeLocalizedFieldsType
    tags:
      - { name: coreshop.index.column_type, type: localizedfields, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeLocalizedFieldsType }

  coreshop.index.column_type.object_brick:
    class: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeObjectBrickType
    tags:
      - { name: coreshop.index.column_type, type: objectbrick, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeObjectBrickType }

  coreshop.index.column_type.object:
    class: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeObjectType
    tags:
      - { name: coreshop.index.column_type, type: object, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Column\IndexColumnTypeObjectType }

  # Filter Condition Types
  coreshop.filter.condition_type.select:
    class: CoreShop\Bundle\IndexBundle\Filter\SelectFilterConditionProcessor
    tags:
      - { name: coreshop.filter.condition_type, type: select, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Filter\FilterConditionSelectType}

  coreshop.filter.condition_type.range:
    class: CoreShop\Bundle\IndexBundle\Filter\RangeFilterConditionProcessor
    tags:
      - { name: coreshop.filter.condition_type, type: range, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Filter\FilterConditionRangeType}

  coreshop.filter.condition_type.multiselect:
    class: CoreShop\Bundle\IndexBundle\Filter\MultiselectFilterConditionProcessor
    tags:
      - { name: coreshop.filter.condition_type, type: multiselect, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Filter\FilterConditionMultiselectType}

  coreshop.filter.condition_type.boolean:
    class: CoreShop\Bundle\IndexBundle\Filter\BooleanFilterConditionProcessor
    tags:
      - { name: coreshop.filter.condition_type, type: boolean, form-type: CoreShop\Bundle\IndexBundle\Form\Type\Filter\FilterConditionBooleanType}