image: php:7.0

# Select what we should cache
cache:
  paths:
  - vendor/

before_script:
  # Install git, the php image doesn't have installed
  - apt-get update -yqq
  - apt-get install git -yqq

  # Install mysql driver
  - docker-php-ext-install pdo_mysql

  # Install ssh-agent if not already installed, it is required by Docker.
  # (change apt-get to yum if you use a CentOS-based image)
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - ssh-add <(echo "$SSH_PRIVATE_KEY")
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

  # Remove cloned stuff
  - rm -rf $CI_PROJECT_DIR
  - mkdir -p $CI_PROJECT_DIR/
  - cd $CI_PROJECT_DIR
  - git clone https://github.com/pimcore/pimcore.git $CI_PROJECT_DIR

   # Install composer
  - curl -sS https://getcomposer.org/installer | php

  # Add Composer Private Repo
  - php composer.phar config repositories.coreshop vcs ssh://git@git.lineofcode.at:2020/CoreShop/CoreShop2.git

  # add config templates (needed for composer install, otherwise symfony throws an exception)
  - mkdir -p var/config
  - cp .travis/system.template.php var/config/system.php
  - cp app/config/parameters.example.yml app/config/parameters.yml

  # install composer
  - php composer.phar install --ignore-platform-reqs

  # Install CoreShop
  - php composer.phar require coreshop/core-shop:dev-symfony-the-fucking-right-way#$CI_COMMIT_REF  --ignore-platform-reqs

  # Include CoreShop with specific commit to test it, because of Pimcore's way of dealing not as dependency,
  # this test is kinda stupid

services:
  - mysql

variables:
  # Configure mysql service (https://hub.docker.com/_/mysql/)
  MYSQL_DATABASE: coreshop_phpunit
  MYSQL_ROOT_PASSWORD: root

# We test PHP7.0 (the default) with MySQL
test:mysql:
  script:
    - cd $CI_PROJECT_DIR/vendor/coreshop/core-shop/tests
    - chmod +x run-tests.sh
    - run-tests.sh

# We test PHP7.1 with MySQL, but we allow it to fail
test:php7.1:mysql:
  image: php:7.1
  script:
    - cd $CI_PROJECT_DIR/vendor/coreshop/coreshop/tests
    - run-tests.sh
